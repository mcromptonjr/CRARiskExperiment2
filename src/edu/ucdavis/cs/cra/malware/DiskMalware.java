package edu.ucdavis.cs.cra.malware;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

/**
 * Utilizes the Disk by a specified percentage.
 * 
 * @author Mac Crompton
 *
 */
public class DiskMalware extends Malware {
	
	/**
	 * Constructs a piece of malware which will keep the Disk IO busy for a specified percentage of the time.
	 * 
	 * @param percent The percent of the time to keep Disk IO busy for.
	 */
	public DiskMalware(double percent) {
		super(percent);
	}

	public void run() {
		try {
			// Open a file in the temporary directory to write to and read from
			System.out.println("About to open file");
			String fileName = "/tmp/dump"+Math.random()+".txt";
			File file = new File(fileName);
			// Make this file truly temporary
			file.deleteOnExit();

			// Keep a kilobyte of randomized data to write
			System.out.println("About to write data");
			int dataToWrite = 1024;
			char[] data = new char[dataToWrite];
			for(int i = 0; i < data.length; i++) {
				data[i] = (char) (Math.random()*256);
			}

			long lastTime = System.currentTimeMillis();

			// Keep writing for as long as we need to
			FileWriter fw = new FileWriter(file);
			while(!stop) {
				fw.write(data);
				fw.flush();

				// If we've spent too much time writing, sleep for a bit.
				if(System.currentTimeMillis() - lastTime > 1000*percent) {
					long extraTime = (long) ((System.currentTimeMillis() - lastTime) - (1000*percent));
					System.out.println((System.currentTimeMillis() - lastTime) + "ms lapsed, sleeping for: " + (long) (1000*(1-percent)+extraTime) + "ms");
					try {
						Thread.sleep((long) (1000*(1-percent)) + extraTime);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}

					lastTime = System.currentTimeMillis();
				}

			}
			fw.close();
			System.out.println("Done writing to disk");
		} catch (IOException e) {
			e.printStackTrace();
		}

	}
}
