package edu.ucdavis.cs.cra.malware;

/**
 * Utilizes the CPU by a specified percentage.
 * 
 * @author Mac Crompton
 * @see <a href=https://en.wikipedia.org/wiki/Busy_waiting>Busy Waiting</a>
 *
 */
public class CpuMalware extends Malware {
	/**
	 * Constructs a piece of malware which uses the CPU by a specified percentage.
	 * 
	 * @param percent The percentage to utilize CPU by.
	 */
	public CpuMalware(double percent) {
		super(percent);
	}

	public void run() {
		// Allocate some memory to do something with for a while
		int[] array = new int[1024*1024];
		long lastTime = System.currentTimeMillis();
		// Busy wait until we are done.
		while(!stop) {
			// Update memory abit so we are doing something
			for(int i = 0; i < array.length; i++) {
				array[i] = (int) (Math.random()*Integer.MAX_VALUE);
			}
			// If we've spent too long busy waiting (based on the percent) sleep for a bit.
			if(System.currentTimeMillis() - lastTime > 1000*percent) {
				long extraTime = (long) ((System.currentTimeMillis() - lastTime) - (1000*percent));
				try {
					Thread.sleep((long) (1000*(1-percent)) + extraTime);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				lastTime = System.currentTimeMillis();
			}
		}
	}
}
